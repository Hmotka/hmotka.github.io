{
    "openapi": "3.0.0",
    "info": {
        "title": "Tesco Clubcard API",
        "version": "2.0"
    },
    "paths": {
        "/v2/banners": {
            "get": {
                "tags": [
                    "Content management / Banners"
                ],
                "summary": "Get banners",
                "operationId": "92a35b8325b36b315f7f75661d9898a2",
                "parameters": [
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BannerResource"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invalid country",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Country with provided code not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/bcm": {
            "get": {
                "tags": [
                    "Bonus customer mailing"
                ],
                "summary": "Get containers",
                "description": "Bonus Customer Mailing (BCM) containers collection",
                "operationId": "84610ba4db7a9708c1778857ca333576",
                "responses": {
                    "200": {
                        "description": "BCM containers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BcmContainerResource"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/me": {
            "get": {
                "tags": [
                    "core"
                ],
                "summary": "Detailed info on logged clubcard",
                "description": "Detailed info on logged clubcard. Values are cached for 1 day.",
                "operationId": "App\\Http\\Controllers\\ClubcardController::getMe",
                "responses": {
                    "200": {
                        "description": "Returns detail info on logged clubcard.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "internal_id": {
                                            "description": "Only for interlan usage, you do not need it",
                                            "type": "integer",
                                            "example": 12
                                        },
                                        "number": {
                                            "description": "Clubcard number",
                                            "type": "string",
                                            "pattern": "^\\d{18}$",
                                            "example": "634009528000000106"
                                        },
                                        "customer_id": {
                                            "nullable": true,
                                            "description": "Null, when the CC was not yet assigned to a customer. Note that customer_id is only unique within a single country",
                                            "type": "integer",
                                            "example": 423
                                        },
                                        "employee_id": {
                                            "nullable": true,
                                            "description": "Null, when clubcard is not registered as employee",
                                            "type": "integer",
                                            "example": 454
                                        },
                                        "is_developer": {
                                            "description": "Clubcard account is developer",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "estamp_meta": {
                                            "nullable": true,
                                            "description": "Deprecated: legacy estatement solution.",
                                            "default": null,
                                            "example": null
                                        },
                                        "estamp": {
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "campaign_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "approved": {
                                                        "type": "boolean",
                                                        "example": false
                                                    },
                                                    "competition_approved": {
                                                        "type": "boolean",
                                                        "example": true
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "default": null
                                        },
                                        "statistics": {
                                            "properties": {
                                                "login": {
                                                    "properties": {
                                                        "first_login_at": {
                                                            "description": "in ISO 8601 Zulu format",
                                                            "type": "string",
                                                            "example": "2021-04-06T21:06:09Z"
                                                        },
                                                        "last_login_at": {
                                                            "description": "in ISO 8601 Zulu format",
                                                            "type": "string",
                                                            "example": "2021-04-06T21:06:09Z"
                                                        },
                                                        "login_count": {
                                                            "description": "Amount of successful login events",
                                                            "type": "integer",
                                                            "example": 69
                                                        },
                                                        "login_count_monthly": {
                                                            "description": "Amount of successful login events in current month",
                                                            "type": "integer",
                                                            "example": 42
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "core"
                ],
                "summary": "Delete account",
                "description": "Delete account",
                "operationId": "App\\Http\\Controllers\\ClubcardController::delete",
                "responses": {
                    "200": {
                        "description": "Clubcard deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Clubcard deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Clubcard cannot be deleted at this time",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Clubcard cannot be deleted at this time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/coupons": {
            "post": {
                "tags": [
                    "Customers / Account / Loyalty program"
                ],
                "summary": "Get coupons",
                "operationId": "c8422a76d6f184e3008ad05541ade670",
                "parameters": [
                    {
                        "name": "Access-Token",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjb3VudHJ5X2lkIjo"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Array of IDs of used coupons",
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "81ac1d07-aba6-4626-a56a-b865e1f824c1"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "baseUrl": {
                                            "type": "string",
                                            "example": "https://digitalcontent.api.tesco.com/v2/media"
                                        },
                                        "couponsIssued": {
                                            "type": "string",
                                            "example": "55"
                                        },
                                        "couponsUsed": {
                                            "type": "string",
                                            "example": "0"
                                        },
                                        "couponsLeft": {
                                            "type": "string",
                                            "example": "7"
                                        },
                                        "couponsList": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "0a742c84-843f-40d4-8616-0613c902615a"
                                                    },
                                                    "image": {
                                                        "type": "string",
                                                        "example": "/mca-cz/0a742c84-843f-40d4-8616-0613c902615a/M47_1790_T.jpeg"
                                                    },
                                                    "validTill": {
                                                        "type": "string",
                                                        "example": "31.05.2021"
                                                    },
                                                    "code": {
                                                        "type": "string",
                                                        "example": "9940758680172530821163"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/preferences/contact_preferences": {
            "get": {
                "tags": [
                    "Customers / Account / Profile"
                ],
                "summary": "Get contact preferences",
                "operationId": "fd726ec54cb27cee1205761c40056208",
                "parameters": [
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    },
                    {
                        "name": "Access-Token",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjb3VudHJ5X2lkIjo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "method": {
                                            "description": "Currently selected method",
                                            "type": "enum",
                                            "enum": [
                                                "email",
                                                "post"
                                            ],
                                            "example": "email"
                                        },
                                        "options": {
                                            "description": "All available options",
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "email"
                                            },
                                            "example": [
                                                "email",
                                                "post"
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Customers / Account / Profile"
                ],
                "summary": "Set contact preferences",
                "operationId": "1a1cba2cb3ffd753b035ad45736215ec",
                "parameters": [
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    },
                    {
                        "name": "Access-Token",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjb3VudHJ5X2lkIjo"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "method"
                                ],
                                "properties": {
                                    "method": {
                                        "description": "Selected method  - see 'Get contact preferences' request for currently allowed options",
                                        "type": "enum",
                                        "enum": [
                                            "email",
                                            "post"
                                        ],
                                        "example": "email"
                                    },
                                    "email": {
                                        "description": "required if `method` == `email`",
                                        "type": "string",
                                        "example": "test@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated"
                    },
                    "422": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/preferences/marketing_consent": {
            "get": {
                "tags": [
                    "Customers / Account / Profile"
                ],
                "summary": "Get marketing consent",
                "operationId": "36b15b33eec3b2629a1fdab876d79897",
                "parameters": [
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    },
                    {
                        "name": "Access-Token",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjb3VudHJ5X2lkIjo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "TescoOffersAndInfo": {
                                            "description": "General purpose consent",
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Customers / Account / Profile"
                ],
                "summary": "Set marketing consent",
                "operationId": "6cf0ce47eeea39dc9d997382153d0f00",
                "parameters": [
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    },
                    {
                        "name": "Access-Token",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjb3VudHJ5X2lkIjo"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "method"
                                ],
                                "properties": {
                                    "TescoOffersAndInfo": {
                                        "description": "General purpose consent",
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated"
                    },
                    "422": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/devices/uuid": {
            "get": {
                "tags": [
                    "devices"
                ],
                "summary": "Register new device",
                "description": "Returns a new device UUID that the app should supply with subsequent requests as `DeviceUUID` HTTP header",
                "operationId": "App\\Http\\Controllers\\Devices\\DeviceController::__invoke",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "device_uuid": {
                                            "type": "string",
                                            "example": "015b4186-7ad2-4db4-b585-092e1ca8f1e2"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/estamp/campaigns/{campaign_id}/bonus_products": {
            "get": {
                "tags": [
                    "estamp"
                ],
                "summary": "Bonus products in campaign collection",
                "description": "Products that yield extra estamps when purchased",
                "operationId": "8e76ed2a7798126ee5fdad97bbf4e8da",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "Estamp campaign ID",
                        "schema": {
                            "type": "integer",
                            "example": "123"
                        }
                    },
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    },
                    {
                        "name": "DeviceUUID",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "5d7a774a-89f1-4806-a444-f8dd8c571689"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bonus products in campaign collection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BonusProductResource"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Campaign not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/estamp/campaigns/{campaign_id}/connect": {
            "post": {
                "tags": [
                    "estamp"
                ],
                "summary": "Connect campaign and clubcard",
                "description": "Connect campaign and clubcard",
                "operationId": "App\\Http\\Controllers\\Estamp\\Campaign\\ConnectClubcardController::__invoke",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "internal id in our cache db",
                        "schema": {
                            "type": "integer",
                            "example": "123"
                        }
                    },
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    },
                    {
                        "name": "DeviceUUID",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "5d7a774a-89f1-4806-a444-f8dd8c571689"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/estamp/campaigns/{campaign_id}/steps": {
            "get": {
                "tags": [
                    "estamp"
                ],
                "summary": "Campaign steps detail",
                "description": "Campaign steps detail",
                "operationId": "App\\Http\\Controllers\\Estamp\\Campaign\\StepsController::__invoke",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "internal id in our cache db",
                        "schema": {
                            "type": "integer",
                            "example": "123"
                        }
                    },
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    },
                    {
                        "name": "DeviceUUID",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "5d7a774a-89f1-4806-a444-f8dd8c571689"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "value": {
                                                "type": "integer",
                                                "example": 5
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/estamp/campaigns": {
            "get": {
                "tags": [
                    "estamp"
                ],
                "summary": "List of estamp campaigns",
                "description": "List of estamp campaigns",
                "operationId": "1667c09b2b15ab854abdd4e0b7925926",
                "parameters": [
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    },
                    {
                        "name": "DeviceUUID",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "5d7a774a-89f1-4806-a444-f8dd8c571689"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of estamp campaigns",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EstampCampaignResource"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/estamp/coupons": {
            "get": {
                "tags": [
                    "estamp"
                ],
                "summary": "Coupon collection",
                "description": "Coupon collection",
                "operationId": "App\\Http\\Controllers\\Estamp\\CouponController::index",
                "parameters": [
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    },
                    {
                        "name": "DeviceUUID",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "5d7a774a-89f1-4806-a444-f8dd8c571689"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CouponResource"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "There is no connected estamp account",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "There is no connected estamp account."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/estamp": {
            "get": {
                "tags": [
                    "estamp"
                ],
                "summary": "Estamp info",
                "description": "Estamp info",
                "operationId": "App\\Http\\Controllers\\Estamp\\EstampController::connect",
                "parameters": [
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    },
                    {
                        "name": "DeviceUUID",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "5d7a774a-89f1-4806-a444-f8dd8c571689"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "count": {
                                            "type": "number",
                                            "example": "12"
                                        },
                                        "ean": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "is_connected": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "terms_and_conditions": {
                                            "type": "boolean",
                                            "example": "https://s3.eu-central-1.amazonaws.com/tesco-clubcard-media/estamp/cs/terms_and_conditions.pdf"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "connected": {
                                        "summary": "connected",
                                        "value": {
                                            "count": 12,
                                            "ean": "",
                                            "is_connected": true,
                                            "terms_and_conditions": "https://s3.eu-central-1.amazonaws.com/tesco-clubcard-media/estamp/cs/terms_and_conditions.pdf"
                                        }
                                    },
                                    "not connected": {
                                        "summary": "not connected",
                                        "value": {
                                            "is_connected": false,
                                            "terms_and_conditions": "https://s3.eu-central-1.amazonaws.com/tesco-clubcard-media/estamp/cs/terms_and_conditions.pdf"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ToDo",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No data related to this input"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "estamp"
                ],
                "summary": "Estamp connect",
                "description": "Estamp connect",
                "operationId": "App\\Http\\Controllers\\Estamp\\EstampController::connect",
                "parameters": [
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    },
                    {
                        "name": "DeviceUUID",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "5d7a774a-89f1-4806-a444-f8dd8c571689"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ean": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "count": {
                                            "type": "number",
                                            "example": "12"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No data related to the input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No data related to this input"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/estamp/campaigns/{campaign_id}/products": {
            "get": {
                "tags": [
                    "estamp"
                ],
                "summary": "Products in campaign collection",
                "description": "Products in campaign collection",
                "operationId": "776f34c4ca739671ac54cc08e61175f9",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "internal id in our cache db",
                        "schema": {
                            "type": "integer",
                            "example": "123"
                        }
                    },
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    },
                    {
                        "name": "DeviceUUID",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "5d7a774a-89f1-4806-a444-f8dd8c571689"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Products in campaign collection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProductResource"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Campaign not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "There is no connected estamp account",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "There is no connected estamp account."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/estamp/campaigns/{campaign_id}/products/{product_id}": {
            "get": {
                "tags": [
                    "estamp"
                ],
                "summary": "Product in campaign detail",
                "description": "Product in campaign detail",
                "operationId": "43bfbec9c677271af0be61855ecab06f",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "internal id in our cache db",
                        "schema": {
                            "type": "integer",
                            "example": "123"
                        }
                    },
                    {
                        "name": "product_id",
                        "in": "path",
                        "description": "internal id in our cache db",
                        "schema": {
                            "type": "integer",
                            "example": "456"
                        }
                    },
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    },
                    {
                        "name": "DeviceUUID",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "5d7a774a-89f1-4806-a444-f8dd8c571689"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Campaign not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/estamp/campaigns/{campaign_id}/products/{product_id}/redeem": {
            "post": {
                "tags": [
                    "estamp"
                ],
                "summary": "Redeem product in campaign",
                "description": "Redeem product in campaign",
                "operationId": "f5b765c395b4e1600c6da350e0c32348",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "internal id in our cache db",
                        "schema": {
                            "type": "integer",
                            "example": "123"
                        }
                    },
                    {
                        "name": "product_id",
                        "in": "path",
                        "description": "internal id in our cache db",
                        "schema": {
                            "type": "integer",
                            "example": "456"
                        }
                    },
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    },
                    {
                        "name": "DeviceUUID",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "5d7a774a-89f1-4806-a444-f8dd8c571689"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ean": {
                                            "type": "string",
                                            "example": "1234"
                                        },
                                        "estamp_count": {
                                            "type": "integer",
                                            "example": 123
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found or your estamp account is unsufficient",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found or your estamp account is unsufficient."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/estamp/campaigns/{campaignId}/tac": {
            "post": {
                "tags": [
                    "estamp"
                ],
                "description": "",
                "operationId": "App\\Http\\Controllers\\TermsAndConditionsController::__invoke",
                "parameters": [
                    {
                        "name": "Access-Token",
                        "in": "header",
                        "required": true,
                        "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjb3VudHJ"
                    },
                    {
                        "name": "campaignId",
                        "in": "path",
                        "required": true,
                        "example": "12"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "approve": {
                                        "description": "Allows approve/reject agreement with terms and condition (gdpr)",
                                        "type": "boolean",
                                        "default": "true"
                                    },
                                    "competition_approval": {
                                        "description": "Allows approve/reject agreement with competition (estamp feature)",
                                        "type": "boolean",
                                        "default": "true"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "When approval request is accepted."
                    },
                    "404": {
                        "description": "Some of entities (campaign, clubcard) was not found"
                    }
                }
            }
        },
        "/v2/estatement": {
            "get": {
                "tags": [
                    "Customers / Account / Estatement"
                ],
                "summary": "Get estatements",
                "description": "Estatement detail",
                "operationId": "App\\Http\\Controllers\\Estatement\\EstatementController::__invoke",
                "parameters": [
                    {
                        "name": "previous",
                        "in": "query",
                        "schema": {
                            "description": "How many previous records should be returned. Defaults to 1.",
                            "type": "int",
                            "example": "1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "clubcard": {
                                            "description": "Clubcard number of the latest record (legacy)",
                                            "type": "string",
                                            "example": "1234567890123456"
                                        },
                                        "data": {
                                            "description": "The records are sorted by batch_id in descending order. The latest is first in the array.",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EstatementRecordResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Estatement meta data not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Estatement not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/promotion/leaflets": {
            "get": {
                "tags": [
                    "Content management / Leaflets"
                ],
                "summary": "Get leaflets",
                "operationId": "272a0d4838872922ea2090a2c5571ed8",
                "parameters": [
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "leaflets": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/LeafletResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid country",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\Model\\Entity\\Country]."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/homepage": {
            "get": {
                "tags": [
                    "Customers / Account / Profile"
                ],
                "summary": "Get homepage data",
                "operationId": "abe8630dd9300d13a04d261103241d00",
                "parameters": [
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    },
                    {
                        "name": "Access-Token",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjb3VudHJ5X2lkIjo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "userName": {
                                            "type": "string",
                                            "example": "Milada Nováková"
                                        },
                                        "availableCoupons": {
                                            "type": "string",
                                            "example": "0 Kč"
                                        },
                                        "points": {
                                            "type": "integer",
                                            "example": 0
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/login": {
            "post": {
                "tags": [
                    "core"
                ],
                "summary": "Login into clubcard application",
                "description": "Login into clubcard application",
                "operationId": "App\\Http\\Controllers\\LoginController::__invoke",
                "parameters": [
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    },
                    {
                        "name": "DeviceUUID",
                        "in": "header",
                        "description": "UUID received from `/devices/uuid` endpoint",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "015b4186-7ad2-4db4-b585-092e1ca8f1e2"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "clubcardNumber": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "clubcardNumber": 10,
                                    "email": "Jessica Smith",
                                    "password": "secret"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "accessToken": {
                                            "type": "string",
                                            "example": "secret"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401 (a)": {
                        "description": "IGHS login failed: invalid email + password pair",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "incorrect_login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403 (a)": {
                        "description": "IGHS login failed: account is deactivated permanently",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "blocked_account"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403 (b)": {
                        "description": "MCA login failed: remote API responds with `E_403_10_10` error (Auth API - Customer Has been Banned in MCA)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Customer Has been Banned in MCA"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "MCA login failed: remote API responds with `E_409_10_10` error (Auth API - Customer Has Left MCA)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Customer Has Left MCA"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403 (c)": {
                        "description": "MCA login failed: remote API responds with other 409 error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "closed_account"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403 (d)": {
                        "description": "MCA advanced login failed: account is locked temporarily (for an hour); remote API responds with `E_401_10_70` (Auth API - Customer AttemptsLeft == 0)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "locked_account"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403 (e)": {
                        "description": "Clubcard was deactivated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "deactivated_account"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "412 (a)": {
                        "description": "MCA advanced login failed due to other reason; the clubcard *is* in local database of ongoing registrations (the registration *was* processed trought app)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "unfinished_registration"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "412 (b)": {
                        "description": "MCA advanced login failed due to other reason; the clubcard *is not* in local database (the registration *was not* processed trough app)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "older_registration"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403 (f)": {
                        "description": "Clubcard check failed, or MCA advanced login failed in second sub-step",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "clubcard_does_not_match"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400 (a)": {
                        "description": "Utterly unexpected error occured",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "connection_problem"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid inputs supplied. `DeviceUUID` must be lowercase valid UUIDv1, and `clubcardNumber` must match with format for `Country-Code`.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/notifications": {
            "get": {
                "tags": [
                    "notification"
                ],
                "summary": "List of user's notifications",
                "description": "List of user's notifications",
                "operationId": "520249c05a28ec8559e9747f8c9f2a5e",
                "parameters": [
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    },
                    {
                        "name": "timestamp",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "example": "1614259579"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of user's notifications",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/NotificationResource"
                                        },
                                        "timestamp": {
                                            "type": "integer",
                                            "example": "1614258004"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "push/normal": {
                                        "summary": "push/normal",
                                        "value": {
                                            "data": {
                                                "id": 1,
                                                "body": "This is the body of a notification",
                                                "title": "Notification received",
                                                "created_at": "2018-04-12 06:31:41",
                                                "planned_at": "2018-04-12 06:31:41",
                                                "valid_to": "2018-04-12 06:31:41",
                                                "sent_at": "2018-04-12 06:31:41",
                                                "media": [],
                                                "type": "push",
                                                "target": "clubcard://website",
                                                "target_website": "https://",
                                                "style": null
                                            },
                                            "timestamp": 1614258004
                                        }
                                    },
                                    "snackbar with icon": {
                                        "summary": "snackbar with icon",
                                        "value": {
                                            "data": {
                                                "id": 1,
                                                "body": "<p>This is the body of a notification</p>",
                                                "title": "Notification received",
                                                "created_at": "2018-04-12 06:31:41",
                                                "planned_at": "2018-04-12 06:31:41",
                                                "valid_to": "2018-04-12 06:31:41",
                                                "sent_at": "2018-04-12 06:31:41",
                                                "media": [],
                                                "type": "snackbar",
                                                "target": "clubcard://website",
                                                "target_website": "https://",
                                                "style": {
                                                    "position": "top",
                                                    "icon": "http://admin.clubcard.amapps.loc/storage/uploaded/A5wY152CrUuOW7FGvQRbjRnvsY1TsOODglExza3l.webp",
                                                    "color_body": "#ffffff",
                                                    "color_background": "#0093ff",
                                                    "color_title": "#ffffff"
                                                }
                                            },
                                            "timestamp": 1614258004
                                        }
                                    },
                                    "snackbar without icon": {
                                        "summary": "snackbar without icon",
                                        "value": {
                                            "data": {
                                                "id": 1,
                                                "body": "<p>This is the body of a notification</p>",
                                                "title": "Notification received",
                                                "created_at": "2018-04-12 06:31:41",
                                                "planned_at": "2018-04-12 06:31:41",
                                                "valid_to": "2018-04-12 06:31:41",
                                                "sent_at": "2018-04-12 06:31:41",
                                                "media": [],
                                                "type": "snackbar",
                                                "target": "clubcard://website",
                                                "target_website": "https://",
                                                "style": {
                                                    "position": "top",
                                                    "icon": null,
                                                    "color_body": "#ffffff",
                                                    "color_background": "#0093ff",
                                                    "color_title": "#ffffff"
                                                }
                                            },
                                            "timestamp": 1614258004
                                        }
                                    },
                                    "dialog with cross button": {
                                        "summary": "dialog with cross button",
                                        "value": {
                                            "data": {
                                                "id": 1,
                                                "body": "<p>This is the body of a notification</p>",
                                                "title": "Notification received",
                                                "created_at": "2018-04-12 06:31:41",
                                                "planned_at": "2018-04-12 06:31:41",
                                                "valid_to": "2018-04-12 06:31:41",
                                                "sent_at": "2018-04-12 06:31:41",
                                                "media": [],
                                                "type": "dialog",
                                                "target": "clubcard://website",
                                                "target_website": "https://",
                                                "style": {
                                                    "type": "dialog_cross"
                                                }
                                            },
                                            "timestamp": 1614258004
                                        }
                                    },
                                    "dialog with OK button": {
                                        "summary": "dialog with OK button",
                                        "value": {
                                            "data": {
                                                "id": 1,
                                                "body": "<p>This is the body of a notification</p>",
                                                "title": "Notification received",
                                                "created_at": "2018-04-12 06:31:41",
                                                "planned_at": "2018-04-12 06:31:41",
                                                "valid_to": "2018-04-12 06:31:41",
                                                "sent_at": "2018-04-12 06:31:41",
                                                "media": [],
                                                "type": "dialog",
                                                "target": "clubcard://website",
                                                "target_website": "https://",
                                                "style": {
                                                    "type": "dialog_ok"
                                                }
                                            },
                                            "timestamp": 1614258004
                                        }
                                    },
                                    "dialog with ok and cancel button": {
                                        "summary": "dialog with ok and cancel button",
                                        "value": {
                                            "data": {
                                                "id": 1,
                                                "body": "<p>This is the body of a notification</p>",
                                                "title": "Notification received",
                                                "created_at": "2018-04-12 06:31:41",
                                                "planned_at": "2018-04-12 06:31:41",
                                                "valid_to": "2018-04-12 06:31:41",
                                                "sent_at": "2018-04-12 06:31:41",
                                                "media": [],
                                                "type": "dialog",
                                                "target": "clubcard://website",
                                                "target_website": "https://",
                                                "style": {
                                                    "type": "dialog_ok_cancel"
                                                }
                                            },
                                            "timestamp": 1614258004
                                        }
                                    },
                                    "banner from image": {
                                        "summary": "banner from image",
                                        "value": {
                                            "data": {
                                                "id": 1,
                                                "body": null,
                                                "title": null,
                                                "created_at": "2018-04-12 06:31:41",
                                                "planned_at": "2018-04-12 06:31:41",
                                                "valid_to": "2018-04-12 06:31:41",
                                                "sent_at": "2018-04-12 06:31:41",
                                                "media": [],
                                                "type": "banner",
                                                "target": "clubcard://website",
                                                "target_website": "https://",
                                                "style": {
                                                    "url": "https://"
                                                }
                                            },
                                            "timestamp": 1614258004
                                        }
                                    },
                                    "banner set up by colors": {
                                        "summary": "banner set up by colors",
                                        "value": {
                                            "data": {
                                                "id": 1,
                                                "body": "<p>This is the body of a notification</p>",
                                                "title": null,
                                                "created_at": "2018-04-12 06:31:41",
                                                "planned_at": "2018-04-12 06:31:41",
                                                "valid_to": "2018-04-12 06:31:41",
                                                "sent_at": "2018-04-12 06:31:41",
                                                "media": [],
                                                "type": "banner",
                                                "target": "clubcard://website",
                                                "target_website": "https://",
                                                "style": {
                                                    "color_body": "#ffffff",
                                                    "color_background": "#0093ff"
                                                }
                                            },
                                            "timestamp": 1614258004
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Country not found by provided code.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Country not found by provided code."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/notifications/{notification_id}": {
            "delete": {
                "tags": [
                    "notification"
                ],
                "summary": "Remove notification for clubcard",
                "description": "Remove notification for clubcard",
                "operationId": "19c4a2b0fc36bfadec71dcf14a4dd6fe",
                "parameters": [
                    {
                        "name": "notification_id",
                        "in": "path",
                        "schema": {
                            "type": "integer",
                            "example": "123"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification removed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Notification for clubcard successfully removed."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Notification doesn't exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Notification with a given ID doesn't exist."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/notifications/{notification_id}/status/read": {
            "get": {
                "tags": [
                    "notification"
                ],
                "summary": "Mark notification as read",
                "operationId": "2387879392cff261334e1cac6ea6fdb9",
                "parameters": [
                    {
                        "name": "notification_id",
                        "in": "path",
                        "schema": {
                            "type": "integer",
                            "example": "123"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Notification marked as read"
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/points": {
            "get": {
                "tags": [
                    "Customers / Account / Loyalty program"
                ],
                "summary": "Get points",
                "operationId": "0a0926856875396868a6e8291d97993e",
                "parameters": [
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    },
                    {
                        "name": "Access-Token",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjb3VudHJ5X2lkIjo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "pointsMessage": {
                                            "type": "string",
                                            "example": "05.10.2020 - 27.06.2021"
                                        },
                                        "points": {
                                            "type": "string",
                                            "example": "33"
                                        },
                                        "periodList": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "periodId": {
                                                        "type": "string",
                                                        "example": "44"
                                                    },
                                                    "period": {
                                                        "type": "string",
                                                        "example": "19.04.2021 - 27.06.2021"
                                                    },
                                                    "periodStart": {
                                                        "description": "in ISO 8601 Zulu format",
                                                        "type": "string",
                                                        "example": "2021-04-19T00:00:00Z"
                                                    },
                                                    "periodEnd": {
                                                        "description": "in ISO 8601 Zulu format",
                                                        "type": "string",
                                                        "example": "2021-06-27T00:00:00Z"
                                                    },
                                                    "status": {
                                                        "description": "`conversion_period` is a period that had ended recently. `unknown` is only returned when dates are completely wrong and couldn't be compared.",
                                                        "type": "enum",
                                                        "enum": [
                                                            "past",
                                                            "conversion_period",
                                                            "current",
                                                            "future",
                                                            "unknown"
                                                        ],
                                                        "example": "current"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/points/detail": {
            "get": {
                "tags": [
                    "Customers / Account / Loyalty program"
                ],
                "summary": "Get points period detail",
                "operationId": "e384a8b070ce0e1d98797db50c9ccc7c",
                "parameters": [
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    },
                    {
                        "name": "Access-Token",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjb3VudHJ5X2lkIjo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "clubcardList": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "634009 XXXX XXXX 6856"
                                            }
                                        },
                                        "shopList": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Prevedeno do dalšího období"
                                            }
                                        },
                                        "transactionList": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "clubcardId": {
                                                        "type": "string",
                                                        "example": "634009 XXXX XXXX 6856"
                                                    },
                                                    "transactionDate": {
                                                        "type": "string",
                                                        "example": "20.04.2021"
                                                    },
                                                    "shopName": {
                                                        "type": "string",
                                                        "example": "Prevedeno do dalšího období"
                                                    },
                                                    "transactionValue": {
                                                        "type": "string",
                                                        "example": "0 Kč"
                                                    },
                                                    "pointsAcquired": {
                                                        "type": "string",
                                                        "example": "33"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "points": {
                                            "type": "string",
                                            "example": "33"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/profile": {
            "get": {
                "tags": [
                    "Customers / Account / Profile"
                ],
                "summary": "Get personal data",
                "operationId": "e15ea823ed934ee5b8a3607836816b98",
                "parameters": [
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    },
                    {
                        "name": "Access-Token",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjb3VudHJ5X2lkIjo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "firstName": {
                                            "type": "string",
                                            "example": "Milada"
                                        },
                                        "middleName": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "lastName": {
                                            "type": "string",
                                            "example": "Nováková"
                                        },
                                        "isMale": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "postalAddress": {
                                            "description": "Formatted full address string",
                                            "type": "string",
                                            "example": "Street 11, 11111 City"
                                        },
                                        "addressLine1": {
                                            "description": "Street",
                                            "type": "string",
                                            "example": "Street"
                                        },
                                        "addressLine2": {
                                            "description": "House number",
                                            "type": "string",
                                            "example": "11"
                                        },
                                        "addressLine4": {
                                            "description": "City",
                                            "type": "string",
                                            "example": "City"
                                        },
                                        "addressLine5": {
                                            "description": "Country",
                                            "type": "string",
                                            "example": "Czech Republic"
                                        },
                                        "postCode": {
                                            "type": "string",
                                            "example": "11111"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "test@example.com"
                                        },
                                        "mobilePhone": {
                                            "type": "string",
                                            "example": "00420111111111"
                                        },
                                        "selectedDayOfBirth": {
                                            "type": "integer",
                                            "example": 31
                                        },
                                        "selectedMonthOfBirth": {
                                            "type": "integer",
                                            "example": 12
                                        },
                                        "selectedYearOfBirth": {
                                            "type": "integer",
                                            "example": 1990
                                        },
                                        "minYearOfBirth": {
                                            "description": "Minimum year that can be used in `Set profile` request",
                                            "type": "integer",
                                            "example": 1922
                                        },
                                        "maxYearOfBirth": {
                                            "description": "Maximum year that can be used in `Set profile` request",
                                            "type": "integer",
                                            "example": 2003
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Customers / Account / Profile"
                ],
                "summary": "Set personal data",
                "operationId": "e712eee28b7ad79387fc6002f8c16749",
                "parameters": [
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    },
                    {
                        "name": "Access-Token",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjb3VudHJ5X2lkIjo"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "firstName",
                                    "lastName",
                                    "isMale",
                                    "email",
                                    "postCode",
                                    "addressLine1",
                                    "addressLine2",
                                    "addressLine4",
                                    "addressLine5",
                                    "dayOfBirth",
                                    "monthOfBirth",
                                    "yearOfBirth"
                                ],
                                "properties": {
                                    "firstName": {
                                        "type": "string",
                                        "example": "Milada"
                                    },
                                    "middleName": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "lastName": {
                                        "type": "string",
                                        "example": "Nováková"
                                    },
                                    "isMale": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "addressLine1": {
                                        "description": "Street",
                                        "type": "string",
                                        "example": "Street"
                                    },
                                    "addressLine2": {
                                        "description": "House number",
                                        "type": "string",
                                        "example": "11"
                                    },
                                    "addressLine4": {
                                        "description": "City",
                                        "type": "string",
                                        "example": "City"
                                    },
                                    "addressLine5": {
                                        "description": "Country",
                                        "type": "string",
                                        "example": "Czech Republic"
                                    },
                                    "postCode": {
                                        "type": "string",
                                        "example": "11111"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "test@example.com"
                                    },
                                    "mobilePhone": {
                                        "type": "string",
                                        "example": "00420111111111"
                                    },
                                    "dayOfBirth": {
                                        "type": "integer",
                                        "example": 31
                                    },
                                    "monthOfBirth": {
                                        "type": "integer",
                                        "example": 12
                                    },
                                    "yearOfBirth": {
                                        "description": "Check `Get profile` request for available values",
                                        "type": "integer",
                                        "example": 1990
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated"
                    },
                    "422": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/promo_events/{eventType}/campaigns": {
            "get": {
                "tags": [
                    "Promo events"
                ],
                "summary": "Get list of all campaigns of given type",
                "description": "",
                "operationId": "App\\Http\\Controllers\\PromoEvents\\CampaignController::__invoke",
                "parameters": [
                    {
                        "name": "eventType",
                        "in": "path",
                        "description": "In [`all` | `estamp` | `calendar` | `qr`, | `info`]",
                        "required": true,
                        "example": "`all`"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CampaignResource"
                                    }
                                },
                                "examples": {
                                    "estamp": {
                                        "summary": "estamp",
                                        "value": [
                                            {
                                                "id": 10,
                                                "type": "estamp",
                                                "title": "CZ campaign",
                                                "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam luctus ligula eget varius.",
                                                "message_box": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam luctus ligula eget varius.",
                                                "how_it_works_key": "minions_how_it_works",
                                                "images": [
                                                    {
                                                        "type": "base",
                                                        "uri": "https://via.placeholder.com/1200x1200"
                                                    }
                                                ],
                                                "terms_and_conditions": "https://example.com/storage/tnc.pdf",
                                                "competition_tac": "https://example.com/storage/competition.pdf",
                                                "visual": {
                                                    "primary_color": "#000000",
                                                    "color_on_primary": "#ffffff",
                                                    "badge_background_color": "#000000",
                                                    "badge_text_color": "#000000",
                                                    "badge_border_color": "#000000",
                                                    "stamp_icon_url": "https://via.placeholder.com/32x32"
                                                },
                                                "state": "pre",
                                                "is_published": true,
                                                "pre_valid_from": "2020-07-24T00:00:00Z",
                                                "valid_from": "2020-08-24T00:00:00Z",
                                                "collectable_to": "2020-09-24T00:00:00Z",
                                                "valid_to": "2020-10-24T00:00:00Z",
                                                "post_valid_to": "2020-11-24T00:00:00Z",
                                                "coupons_total": 5,
                                                "coupons_redeemed": 2,
                                                "clubcard": {
                                                    "can_claim": true,
                                                    "can_redeem": true
                                                },
                                                "details": []
                                            }
                                        ]
                                    },
                                    "calendar": {
                                        "summary": "calendar",
                                        "value": [
                                            {
                                                "id": 10,
                                                "type": "calendar",
                                                "title": "CZ campaign",
                                                "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam luctus ligula eget varius.",
                                                "message_box": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam luctus ligula eget varius.",
                                                "how_it_works_key": null,
                                                "images": [
                                                    {
                                                        "type": "base",
                                                        "uri": "https://via.placeholder.com/1200x1200"
                                                    }
                                                ],
                                                "terms_and_conditions": "https://example.com/storage/tnc.pdf",
                                                "competition_tac": "https://example.com/storage/competition.pdf",
                                                "visual": {
                                                    "primary_color": "#000000",
                                                    "color_on_primary": "#ffffff"
                                                },
                                                "state": "pre",
                                                "is_published": true,
                                                "pre_valid_from": "2020-07-24T00:00:00Z",
                                                "valid_from": "2020-08-24T00:00:00Z",
                                                "collectable_to": "2020-09-24T00:00:00Z",
                                                "valid_to": "2020-10-24T00:00:00Z",
                                                "post_valid_to": "2020-11-24T00:00:00Z",
                                                "coupons_total": 5,
                                                "coupons_redeemed": 2,
                                                "clubcard": {
                                                    "can_claim": true,
                                                    "can_redeem": true
                                                },
                                                "details": []
                                            }
                                        ]
                                    },
                                    "qr": {
                                        "summary": "qr",
                                        "value": [
                                            {
                                                "id": 10,
                                                "type": "qr",
                                                "title": "CZ campaign",
                                                "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam luctus ligula eget varius.",
                                                "message_box": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam luctus ligula eget varius.",
                                                "how_it_works_key": null,
                                                "images": [
                                                    {
                                                        "type": "base",
                                                        "uri": "https://via.placeholder.com/1200x1200"
                                                    }
                                                ],
                                                "terms_and_conditions": "https://example.com/storage/tnc.pdf",
                                                "competition_tac": "https://example.com/storage/competition.pdf",
                                                "visual": {
                                                    "primary_color": "#000000",
                                                    "color_on_primary": "#ffffff"
                                                },
                                                "state": "pre",
                                                "is_published": true,
                                                "pre_valid_from": "2020-07-24T00:00:00Z",
                                                "valid_from": "2020-08-24T00:00:00Z",
                                                "collectable_to": "2020-09-24T00:00:00Z",
                                                "valid_to": "2020-10-24T00:00:00Z",
                                                "post_valid_to": "2020-11-24T00:00:00Z",
                                                "coupons_total": 5,
                                                "coupons_redeemed": 2,
                                                "clubcard": {
                                                    "can_claim": true,
                                                    "can_redeem": true
                                                },
                                                "details": []
                                            }
                                        ]
                                    },
                                    "info": {
                                        "summary": "info",
                                        "value": [
                                            {
                                                "id": 10,
                                                "type": "info",
                                                "title": "CZ campaign",
                                                "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam luctus ligula eget varius.",
                                                "message_box": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam luctus ligula eget varius.",
                                                "how_it_works_key": null,
                                                "images": [
                                                    {
                                                        "type": "base",
                                                        "uri": "https://via.placeholder.com/1200x1200"
                                                    }
                                                ],
                                                "terms_and_conditions": "https://example.com/storage/tnc.pdf",
                                                "competition_tac": "https://example.com/storage/competition.pdf",
                                                "visual": {
                                                    "primary_color": "#000000",
                                                    "color_on_primary": "#ffffff"
                                                },
                                                "state": "pre",
                                                "is_published": true,
                                                "pre_valid_from": "2020-07-24T00:00:00Z",
                                                "valid_from": "2020-08-24T00:00:00Z",
                                                "collectable_to": "2020-09-24T00:00:00Z",
                                                "valid_to": "2020-10-24T00:00:00Z",
                                                "post_valid_to": "2020-11-24T00:00:00Z",
                                                "coupons_total": 5,
                                                "coupons_redeemed": 2,
                                                "clubcard": {
                                                    "can_claim": true,
                                                    "can_redeem": true
                                                },
                                                "details": {
                                                    "external_link": "https://example.com/campaign"
                                                }
                                            }
                                        ]
                                    },
                                    "competition": {
                                        "summary": "competition",
                                        "value": [
                                            {
                                                "id": 11,
                                                "type": "competition",
                                                "title": "",
                                                "description": null,
                                                "message_box": null,
                                                "how_it_works_key": null,
                                                "images": [
                                                    {
                                                        "type": "base",
                                                        "uri": "https://via.placeholder.com/1200x1200"
                                                    }
                                                ],
                                                "terms_and_conditions": "https://example.com/storage/tnc.pdf",
                                                "competition_tac": "https://example.com/storage/competition.pdf",
                                                "visual": {
                                                    "primary_color": "#000000",
                                                    "color_on_primary": "#ffffff"
                                                },
                                                "state": "running",
                                                "is_published": true,
                                                "pre_valid_from": null,
                                                "valid_from": "2021-08-03T00:00:00Z",
                                                "collectable_to": null,
                                                "valid_to": "2021-08-04T00:00:00Z",
                                                "post_valid_to": null,
                                                "coupons_total": 0,
                                                "coupons_redeemed": 0,
                                                "clubcard": {
                                                    "can_claim": false,
                                                    "can_redeem": false
                                                },
                                                "details": {
                                                    "title_key": "competition_campaignA_title",
                                                    "description_key": "competition_campaignA_description",
                                                    "external_link": "https://example.com/campaign"
                                                }
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/promo_events/competition/{campaign_id}": {
            "get": {
                "tags": [
                    "Competition"
                ],
                "summary": "Competition campaign detail",
                "operationId": "App\\Http\\Controllers\\PromoEvents\\Competition\\CampaignController::get",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "required": true,
                        "example": "12"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CompetitionCampaignResource"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Campaign with a given ID not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign with a given ID not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/promo_events/competition/{campaign_id}/tac_agreement": {
            "put": {
                "tags": [
                    "Competition"
                ],
                "summary": "Give a terms & conditions agreement",
                "operationId": "App\\Http\\Controllers\\PromoEvents\\Competition\\CampaignController::setAgreement",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "required": true,
                        "example": "12"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tac_agreement_given"
                                ],
                                "properties": {
                                    "tac_agreement_given": {
                                        "type": "boolean",
                                        "example": "true"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200 (a)": {
                        "description": "Agreement given",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Agreement given"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200 (b)": {
                        "description": "Agreement taken back",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Agreement taken back"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200 (c)": {
                        "description": "Agreement unchanged",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Agreement unchanged"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Campaign is not running",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign is not running"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Campaign with a given ID not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign with a given ID not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/promo_events/competition/{campaign_id}/me": {
            "get": {
                "tags": [
                    "Competition"
                ],
                "summary": "Status of a clubcard in a competition campaign",
                "operationId": "App\\Http\\Controllers\\PromoEvents\\Competition\\CampaignController::status",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "required": true,
                        "example": "12"
                    }
                ],
                "responses": {
                    "200 (a)": {
                        "description": "Agreement given",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "tac_agreement_given": {
                                            "nullable": true,
                                            "description": "in ISO 8601 Zulu format",
                                            "type": "string",
                                            "example": "2020-07-24T00:00:00Z"
                                        },
                                        "additional_conditions_met": {
                                            "type": "boolean",
                                            "example": "true"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Campaign with a given ID not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign with a given ID not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/qr/campaigns": {
            "get": {
                "tags": [
                    "qr"
                ],
                "summary": "QR Campaigns List",
                "description": "Only campaigns in between pre_valid_from and post_valid_to are returned.",
                "operationId": "App\\Http\\Controllers\\QR\\CampaignController::__invoke",
                "parameters": [
                    {
                        "name": "DeviceUUID",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "5d7a774a-89f1-4806-a444-f8dd8c571689"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/QrCampaignResource"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/qr/campaigns/{campaign_id}/me": {
            "get": {
                "tags": [
                    "qr"
                ],
                "summary": "Get status (get barcodes)",
                "description": "Get status (get barcodes)",
                "operationId": "App\\Http\\Controllers\\QR\\ClubcardController::getStatus",
                "parameters": [
                    {
                        "name": "DeviceUUID",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "5d7a774a-89f1-4806-a444-f8dd8c571689"
                        }
                    },
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "required": true,
                        "example": "12"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user_status": {
                                            "type": "enum",
                                            "enum": [
                                                "newly_registred",
                                                "old"
                                            ],
                                            "example": "newly_registred"
                                        },
                                        "barcodes": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/QrBarcodeResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User did not claim their coupons yet",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User did not claim their coupons yet"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "qr"
                ],
                "summary": "Register (claim barcodes)",
                "description": "Register (claim barcodes)",
                "operationId": "App\\Http\\Controllers\\QR\\ClubcardController::register",
                "parameters": [
                    {
                        "name": "DeviceUUID",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "5d7a774a-89f1-4806-a444-f8dd8c571689"
                        }
                    },
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "required": true,
                        "example": "12"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Registration was performed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Registration was performed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "User is already registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User is already registered"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "There are no coupons available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "There are no coupons available"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Any other error - presumably, claim of the coupons on third party failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unknown error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/registrations/activation_email": {
            "get": {
                "tags": [
                    "registration"
                ],
                "summary": "Resend activation email",
                "operationId": "5db19f72edc1b778d492c55e07f3a814",
                "parameters": [
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    },
                    {
                        "name": "DeviceUUID",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "5d7a774a-89f1-4806-a444-f8dd8c571689"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "test@example.com"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Endpoint called in wrong step of ongoing registration (correct = 1)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Wrong registration step"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/registrations/clubcard": {
            "get": {
                "tags": [
                    "registration"
                ],
                "summary": "Get clubcard number associated with the registration (request new one, if no CC is assigned yet)",
                "operationId": "4babc90deddd989685488ac55938c693",
                "parameters": [
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    },
                    {
                        "name": "DeviceUUID",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "5d7a774a-89f1-4806-a444-f8dd8c571689"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "test@example.com"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "clubcard_number": {
                                            "type": "string",
                                            "example": "644009567000394900"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Endpoint called in wrong step of ongoing registration (correct = 2,3,4)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Wrong registration step"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "registration"
                ],
                "summary": "Submit clubcard data",
                "operationId": "23ada02e96b9bc12a71d5ad55a02504a",
                "parameters": [
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    },
                    {
                        "name": "DeviceUUID",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "5d7a774a-89f1-4806-a444-f8dd8c571689"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "number"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "test@example.com"
                                    },
                                    "number": {
                                        "type": "string",
                                        "example": "634009566001151544"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Endpoint called in wrong step of ongoing registration (correct = 2)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Wrong registration step"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/registrations/clubcard/format": {
            "get": {
                "tags": [
                    "registration"
                ],
                "summary": "Check Clubcard number format",
                "operationId": "b3c34ceb807e965b8be696607c1dc05f",
                "parameters": [
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    },
                    {
                        "name": "DeviceUUID",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "5d7a774a-89f1-4806-a444-f8dd8c571689"
                        }
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "634009566001151544"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "422": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/registrations/clubcard/status": {
            "get": {
                "tags": [
                    "registration"
                ],
                "summary": "Get clubcard status",
                "description": "Retrieve current clubcard activity status.",
                "operationId": "b504f87df18b592b079a7f38065d6cae",
                "parameters": [
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    },
                    {
                        "name": "DeviceUUID",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "5d7a774a-89f1-4806-a444-f8dd8c571689"
                        }
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "634009566001151544"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "In [ `CARD_ALREADY_REGISTERED`, `CARD_NOT_REGISTERED_NGC_IN_PROGRESS`, `CARD_REGISTERED_CC_REGISTERED`, `CARD_NOT_REGISTERED_NGC_REJECTED`, `MCA_ACTIVATION_ALREADY_DONE`, `MCA_ACTIVATION_PASSED`,\t`MCA_ACTIVATION_FAILED`, `ERROR_INVALID_CC_NUMBER_FORMAT`, `ERROR_CC_NUMBER_NOT_FOUND`, `ERROR_PROCESSING_THE_REQUEST`]",
                                            "type": "string",
                                            "example": "CARD_ALREADY_REGISTERED"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/registrations/clubcard/skeleton": {
            "get": {
                "tags": [
                    "registration"
                ],
                "summary": "Check if Clubcard is skeleton (if it was not used before)",
                "operationId": "5276f20266b82a308991671f3bf166fe",
                "parameters": [
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    },
                    {
                        "name": "DeviceUUID",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "5d7a774a-89f1-4806-a444-f8dd8c571689"
                        }
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "634009566001151544"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "isSkeleton": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/registrations/": {
            "post": {
                "tags": [
                    "registration"
                ],
                "summary": "Create new registration (submit email & password)",
                "operationId": "75312d9b4f2d90d226025b96640e8bb7",
                "parameters": [
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    },
                    {
                        "name": "DeviceUUID",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "5d7a774a-89f1-4806-a444-f8dd8c571689"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "test@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "u21iYJuj$Kk6#pOs"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Successfully created"
                    },
                    "422": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Endpoint called in wrong step of ongoing registration (correct = 0)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Wrong registration step"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/registrations/ighs/check": {
            "post": {
                "tags": [
                    "registration"
                ],
                "summary": "Check if the account exists on IGHS",
                "operationId": "48ad44ffb66a441d158e4605e93debce",
                "parameters": [
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    },
                    {
                        "name": "DeviceUUID",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "5d7a774a-89f1-4806-a444-f8dd8c571689"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "test@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "u21iYJuj$Kk6#pOs"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200 (a)": {
                        "description": "`active`: Account exists and is active. User can log in with supplied credentials.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "active"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200 (b)": {
                        "description": "`blocked`: Account exists and is blocked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "blocked"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200 (c)": {
                        "description": "`wrong_password`: Most likely the account exists, but wrong password is supplied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "wrong_password"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200 (d)": {
                        "description": "`new`: Account did not exist and the app may continue to the registration",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "new"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/registrations/mca/check": {
            "post": {
                "tags": [
                    "registration"
                ],
                "summary": "Check if the account is present in MCA",
                "operationId": "7415397ccc9391983e37ba92a87cf5e7",
                "parameters": [
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    },
                    {
                        "name": "DeviceUUID",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "5d7a774a-89f1-4806-a444-f8dd8c571689"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "test@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "u21iYJuj$Kk6#pOs"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "checkPassed": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Endpoint called in wrong step of ongoing registration (correct = 2,3,4)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Wrong registration step"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/registrations/mca/remote-status": {
            "post": {
                "tags": [
                    "registration"
                ],
                "summary": "Get MCA activation status",
                "operationId": "bcc2a0c5c29845ded72db43c1aa60447",
                "parameters": [
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    },
                    {
                        "name": "DeviceUUID",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "5d7a774a-89f1-4806-a444-f8dd8c571689"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "test@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "u21iYJuj$Kk6#pOs"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "In [ `activated`, `banned`, `eligible`, `leftscheme`, `not_eligible` ]",
                                            "type": "string",
                                            "example": "activated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "IGHS login failed - likely, the user is blocked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "ighs_login_failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/registrations/mca/activate": {
            "post": {
                "tags": [
                    "registration"
                ],
                "summary": "Perform MCA activation",
                "operationId": "ffd402cbbc9125bc71865da509bce214",
                "parameters": [
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    },
                    {
                        "name": "DeviceUUID",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "5d7a774a-89f1-4806-a444-f8dd8c571689"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "clubcard_number",
                                    "last_name",
                                    "day_of_birth",
                                    "month_of_birth",
                                    "year_of_birth"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "test@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "u21iYJuj$Kk6#pOs"
                                    },
                                    "clubcard_number": {
                                        "type": "string",
                                        "example": "634009520000000000"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Zemen"
                                    },
                                    "day_of_birth": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "month_of_birth": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "year_of_birth": {
                                        "type": "integer",
                                        "example": "1990"
                                    },
                                    "zipcode": {
                                        "type": "string",
                                        "example": "42566"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "In [ `activated`, `banned`, `eligible`, `leftscheme`, `not_eligible` ]",
                                            "type": "string",
                                            "example": "activated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "IGHS login failed - likely, the user is blocked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "ighs_login_failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/registrations/registrations/personal_data": {
            "post": {
                "tags": [
                    "registration"
                ],
                "summary": "Submit full personal data.",
                "operationId": "cf187cc333f934dd8c08c024d41c820b",
                "parameters": [
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    },
                    {
                        "name": "DeviceUUID",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "5d7a774a-89f1-4806-a444-f8dd8c571689"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "clubcard_number",
                                    "first_name",
                                    "last_name",
                                    "birthdate",
                                    "zipcode",
                                    "gender"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "test@example.com"
                                    },
                                    "clubcard_number": {
                                        "type": "string",
                                        "example": "634009566001151544"
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "example": "Kryštof"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Ondřej"
                                    },
                                    "birthdate": {
                                        "description": "in YYYY-MM-DD format",
                                        "type": "string",
                                        "example": "1992-10-05"
                                    },
                                    "zipcode": {
                                        "type": "string",
                                        "example": "12352"
                                    },
                                    "gender": {
                                        "description": "in [`M`,`F`]",
                                        "type": "string",
                                        "example": "M"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+420459685331"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "Prague"
                                    },
                                    "province": {
                                        "type": "string",
                                        "example": "Prague"
                                    },
                                    "street": {
                                        "type": "string",
                                        "example": "Vyskočilova"
                                    },
                                    "street_number": {
                                        "type": "string",
                                        "example": "48"
                                    },
                                    "marketing_consent": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Endpoint called in wrong step of ongoing registration (correct = 3)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Wrong registration step"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/registrations/registrations/short_personal_data": {
            "post": {
                "tags": [
                    "registration"
                ],
                "summary": "Submit short personal data.",
                "operationId": "2e3b6dcafef4e287459c78552addc15b",
                "parameters": [
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    },
                    {
                        "name": "DeviceUUID",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "5d7a774a-89f1-4806-a444-f8dd8c571689"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "clubcard_number",
                                    "last_name",
                                    "birthdate"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "test@example.com"
                                    },
                                    "clubcard_number": {
                                        "type": "string",
                                        "example": "634009566001151544"
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "example": "Kryštof"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Ondřej"
                                    },
                                    "birthdate": {
                                        "description": "in YYYY-MM-DD format",
                                        "type": "string",
                                        "example": "1992-10-05"
                                    },
                                    "zipcode": {
                                        "type": "string",
                                        "example": "12352"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Endpoint called in wrong step of ongoing registration (correct = 3)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Wrong registration step"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/registrations/status": {
            "get": {
                "tags": [
                    "registration"
                ],
                "summary": "Get registration status",
                "description": "phpcs:disable Generic.Files.LineLength.TooLong",
                "operationId": "1faf8bd49a50933c2ffdc2407d0be4df",
                "parameters": [
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    },
                    {
                        "name": "DeviceUUID",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "5d7a774a-89f1-4806-a444-f8dd8c571689"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "test@example.com"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "step": {
                                            "description": "Available values: [`0` = not in progress, `1` = registered, `2` = email confirmed, `3` = CC added, `4` personal data added]",
                                            "type": "integer",
                                            "example": "1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/registrations/status/in_progress": {
            "get": {
                "tags": [
                    "registration"
                ],
                "summary": "Check if registration is in progress on third party registration service",
                "operationId": "9a7190876a3b2935adf88229fc002cc0",
                "parameters": [
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    },
                    {
                        "name": "DeviceUUID",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "5d7a774a-89f1-4806-a444-f8dd8c571689"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "test@example.com"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "isInProgress": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error from registration API",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "request failed on third party"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/resetPassword": {
            "get": {
                "tags": [
                    "reset-password"
                ],
                "summary": "Send request to reset password",
                "operationId": "82ab94e5686c8eafb47a9996c2fb0eb9",
                "parameters": [
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "test@example.com"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "500": {
                        "description": "Unknown failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "unknown error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        },
        "/v2/app_settings/feature_settings": {
            "get": {
                "tags": [
                    "settings"
                ],
                "summary": "Get URL where the JSON file with feature settings can be found",
                "description": "Get URL where the JSON file with feature settings can be found",
                "operationId": "5d15a8881262f7d13a4766f1ef3bf242",
                "parameters": [
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "URL of the file with settings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "uri": {
                                            "type": "string",
                                            "example": "https://"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "JSON file with settings not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "JSON file with settings not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/app_settings/text_content": {
            "get": {
                "tags": [
                    "settings"
                ],
                "summary": "Get URL where the JSON file with text content keys can be found",
                "description": "Get URL where the JSON file with text content keys can be found",
                "operationId": "8d635a820728ef2eb134792dada81bc6",
                "parameters": [
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "URL of the file",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "uri": {
                                            "type": "string",
                                            "example": "https://"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "JSON file with settings not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "JSON file not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/vouchers": {
            "get": {
                "tags": [
                    "Customers / Account / Loyalty program"
                ],
                "summary": "Get vouchers",
                "operationId": "e150cc0ec447462f9275a2f81b02d9c6",
                "parameters": [
                    {
                        "name": "Access-Token",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjb3VudHJ5X2lkIjo"
                        }
                    },
                    {
                        "name": "Country-Code",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "cs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "vouchersIssuedInTwoYears": {
                                            "type": "integer",
                                            "example": "0"
                                        },
                                        "vouchersUsed": {
                                            "type": "integer",
                                            "example": "0"
                                        },
                                        "vouchersLeft": {
                                            "type": "string",
                                            "example": "1895 Kč"
                                        },
                                        "vouchersList": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "dateExpire": {
                                                        "type": "string",
                                                        "example": "31.07.2021"
                                                    },
                                                    "code": {
                                                        "type": "string",
                                                        "example": "9434039904658224520550"
                                                    },
                                                    "value": {
                                                        "type": "string",
                                                        "example": "125 Kč"
                                                    },
                                                    "amount": {
                                                        "type": "integer",
                                                        "example": "125"
                                                    },
                                                    "amount_o2": {
                                                        "type": "integer",
                                                        "example": "250"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auhorization-via-access-token": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "BannerResource": {
                "title": "Banner",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 10
                    },
                    "valid_to": {
                        "description": "In Unix timestamp",
                        "type": "integer",
                        "example": "1626818340"
                    },
                    "src": {
                        "type": "string",
                        "example": "https://via.placeholder.com/1200x400"
                    },
                    "targetUrl": {
                        "description": "Action performed upon click (deeplink), or URI.",
                        "type": "string",
                        "example": "clubcard://estamp"
                    },
                    "alt": {
                        "type": "string",
                        "example": "Lorem Ipsum"
                    },
                    "content": {
                        "description": "Action performed upon click",
                        "type": "string",
                        "example": "Lorem Ipsum Dolor Sit Amet"
                    },
                    "buttonText": {
                        "type": "string",
                        "example": "Click here"
                    },
                    "textColor": {
                        "description": "Colour in hex notation",
                        "type": "string",
                        "example": "#ffffff"
                    },
                    "backgroundColor": {
                        "description": "Colour in hex notation",
                        "type": "string",
                        "example": "#00539f"
                    }
                },
                "type": "object"
            },
            "BcmActionResource": {
                "title": "BCM Action",
                "description": "",
                "properties": {
                    "title": {
                        "type": "string",
                        "example": "Action Title"
                    },
                    "action": {
                        "nullable": true,
                        "type": "string",
                        "example": "clubcard://home"
                    },
                    "style": {
                        "type": "string",
                        "example": "filled"
                    }
                },
                "type": "object"
            },
            "BcmContainerResource": {
                "title": "Bonus Customer Mailing (BCM) container",
                "description": "",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 23
                    },
                    "type": {
                        "description": "In [`eligible`, `noneligible`, `bonus`]",
                        "type": "string",
                        "example": "eligible"
                    },
                    "statement_position": {
                        "nullable": true,
                        "description": "Deprecated, only included for backward compatibility. Use `estatement_batch_id` instead.",
                        "type": "integer",
                        "example": 1
                    },
                    "estatement_batch_id": {
                        "nullable": true,
                        "type": "integer",
                        "example": 1
                    },
                    "ordering": {
                        "type": "integer",
                        "example": 1
                    },
                    "valid_from": {
                        "type": "string",
                        "example": "2020-09-23"
                    },
                    "valid_to": {
                        "type": "string",
                        "example": "2020-09-30"
                    },
                    "visible_to": {
                        "nullable": true,
                        "type": "string",
                        "example": "2020-10-01"
                    },
                    "status": {
                        "description": "In [`active`, `inactive`]",
                        "type": "string",
                        "example": "active"
                    },
                    "content_link": {
                        "nullable": true,
                        "type": "string",
                        "example": "http://example.com/content"
                    },
                    "title": {
                        "type": "string",
                        "example": "Title"
                    },
                    "title_image": {
                        "type": "string",
                        "example": "http://example.com/image.jpg"
                    },
                    "description": {
                        "type": "string",
                        "example": "This is description."
                    },
                    "popup_text": {
                        "nullable": true,
                        "type": "string",
                        "example": "Eligible/not eligible notification."
                    },
                    "banner_uri": {
                        "type": "string",
                        "example": "http://example.com/banner.jpg"
                    },
                    "media": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BcmMediaResource"
                        }
                    },
                    "actions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BcmActionResource"
                        }
                    }
                },
                "type": "object"
            },
            "BcmMediaResource": {
                "title": "BCM Media",
                "description": "Inner content to display",
                "properties": {
                    "title": {
                        "type": "string",
                        "example": "Media Title"
                    },
                    "action": {
                        "nullable": true,
                        "type": "string",
                        "example": "clubcard://home"
                    },
                    "image_uri": {
                        "type": "string",
                        "example": "http://example.com/image.jpg"
                    }
                },
                "type": "object"
            },
            "CalendarBarcodeResource": {
                "title": "Calendar Barcode",
                "description": "",
                "properties": {
                    "smart_barcode": {
                        "type": "string",
                        "example": "9940908541506467603179"
                    },
                    "ean": {
                        "type": "string",
                        "example": "9940908541506"
                    },
                    "status": {
                        "type": "enum",
                        "enum": [
                            "available",
                            "claimed",
                            "redeemed",
                            "expired"
                        ],
                        "example": "redeemed"
                    },
                    "claimed_at": {
                        "nullable": true,
                        "type": "string",
                        "example": "2020-06-30T14:55:04+00:00"
                    },
                    "redeemed_at": {
                        "nullable": true,
                        "type": "string",
                        "example": "2020-06-30T14:55:04+00:00"
                    },
                    "expire_at": {
                        "nullable": true,
                        "type": "string",
                        "example": "2020-06-30T14:55:04+00:00"
                    },
                    "position": {
                        "type": "number",
                        "example": "1"
                    },
                    "type": {
                        "type": "enum",
                        "enum": "{'regular', 'golden-regular', 'golden-employee'}"
                    },
                    "reward_id": {
                        "type": "number",
                        "example": "1"
                    },
                    "reward": {
                        "$ref": "#/components/schemas/QrRewardResource"
                    }
                },
                "type": "object"
            },
            "BonusProductResource": {
                "title": "Estamp bonus product",
                "description": "",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 23
                    },
                    "campaign_id": {
                        "type": "integer",
                        "example": 5
                    },
                    "title": {
                        "type": "string",
                        "example": "Product"
                    },
                    "description": {
                        "nullable": true,
                        "type": "string",
                        "example": "Product description"
                    },
                    "image_url": {
                        "type": "string",
                        "example": "https://via.placeholder.com/1200x400"
                    },
                    "barcode": {
                        "description": "Base barcode (EAN) of the product",
                        "type": "string",
                        "example": "4006381333931"
                    },
                    "estamp_value": {
                        "description": "How many estamp points will the purchase of one unit yield.",
                        "type": "float",
                        "example": "0.5"
                    },
                    "valid_from": {
                        "description": "in ISO 8601 Zulu format",
                        "type": "string",
                        "example": "2021-04-06T21:06:09Z"
                    },
                    "valid_to": {
                        "description": "in ISO 8601 Zulu format",
                        "type": "string",
                        "example": "2021-04-06T21:06:09Z"
                    },
                    "status": {
                        "description": "`active` if `valid_from` is in past and `valid_to` in future; `inactive` otherwise.",
                        "type": "string",
                        "enum": [
                            "active",
                            "inactive"
                        ],
                        "example": "active"
                    }
                },
                "type": "object"
            },
            "EstampCampaignResource": {
                "title": "Estamp Campaign",
                "description": "",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "description": {
                        "type": "string",
                        "example": "Hello"
                    },
                    "how_it_works_key": {
                        "nullable": true,
                        "description": "Reference to text content file",
                        "type": "string",
                        "example": "minions_how_it_works"
                    },
                    "steps": {
                        "type": "integer",
                        "example": 4
                    },
                    "terms_and_conditions": {
                        "type": "string",
                        "example": "http://www.tac.loc"
                    },
                    "picture_uri": {
                        "type": "string",
                        "example": "http://www.tac.loc"
                    },
                    "coupons_limit": {
                        "type": "integer",
                        "example": 10
                    },
                    "initial_estamp_bonus": {
                        "type": "integer",
                        "example": 5
                    },
                    "state": {
                        "type": "enum",
                        "enum": [
                            "scheduled",
                            "pre",
                            "running",
                            "running_but_collection",
                            "post",
                            "ended",
                            "unknown"
                        ],
                        "example": "running"
                    },
                    "pre_valid_from": {
                        "type": "string",
                        "example": "31.12.2020"
                    },
                    "valid_from": {
                        "type": "string",
                        "example": "31.12.2020"
                    },
                    "collectable_to": {
                        "type": "string",
                        "example": "31.12.2020"
                    },
                    "valid_to": {
                        "type": "string",
                        "example": "31.12.2020"
                    },
                    "post_valid_to": {
                        "type": "string",
                        "example": "31.12.2020"
                    }
                },
                "type": "object"
            },
            "CouponResource": {
                "title": "Estamp coupon",
                "description": "",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 12
                    },
                    "ean": {
                        "type": "string",
                        "example": "9940859150604103899001"
                    },
                    "product": {
                        "$ref": "#/components/schemas/ProductResource"
                    }
                },
                "type": "object"
            },
            "ProductResource": {
                "title": "Estamp product",
                "description": "",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 23
                    },
                    "campaign_id": {
                        "type": "integer",
                        "example": 5
                    },
                    "type": {
                        "description": "Deprecated. In [`product`]",
                        "type": "string",
                        "example": "base"
                    },
                    "title": {
                        "type": "string",
                        "example": "60CZK"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "type": {
                                    "description": "In [`base`]",
                                    "type": "string",
                                    "example": "base"
                                },
                                "uri": {
                                    "type": "string",
                                    "example": "http://test.loc"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "valid_from": {
                        "type": "string",
                        "example": "20.10.2019"
                    },
                    "valid_to": {
                        "type": "string",
                        "example": "06.01.2020"
                    },
                    "estamp_count": {
                        "type": "integer",
                        "example": 10
                    },
                    "redeemed": {
                        "type": "integer",
                        "example": 10
                    },
                    "rewards": {
                        "properties": {
                            "total": {
                                "type": "integer",
                                "example": 10
                            },
                            "redeemed": {
                                "type": "integer",
                                "example": null
                            },
                            "left": {
                                "type": "integer",
                                "example": 9
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "EstatementRecordResource": {
                "title": "Estatement Record",
                "description": "",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "123"
                    },
                    "batch_id": {
                        "description": "nullable",
                        "type": "integer",
                        "example": "1"
                    },
                    "clubcard_number": {
                        "description": "Clubcard to which this record is assigned",
                        "type": "string",
                        "example": "634009566000336856"
                    },
                    "created_at": {
                        "type": "string",
                        "example": "2020-09-25"
                    },
                    "banner_uri": {
                        "type": "string",
                        "example": "https://s3"
                    },
                    "data": {
                        "description": "contents are variable - depending on what third party supplies",
                        "type": "string",
                        "example": {
                            "bonus_points": "0",
                            "total_points": "300",
                            "normal_points": "75",
                            "reward_amount": "30.00",
                            "partner_points": "0",
                            "product_points": "0",
                            "welcome_points": "0",
                            "convertedpoints": "300",
                            "partner_points1": "0",
                            "partner_points2": "0",
                            "partner_points3": "0",
                            "partner_points4": "0",
                            "partner_points5": "0",
                            "partner_points6": "0",
                            "partner_points7": "0",
                            "partner_points8": "0",
                            "partner_points9": "0",
                            "partner_points10": "0",
                            "remaining_points": "0",
                            "brought_forward_points": "225"
                        }
                    }
                },
                "type": "object"
            },
            "LeafletResource": {
                "title": "Leaflet",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Lorem Ipsum"
                    },
                    "activeFrom": {
                        "description": "In Unix timestamp",
                        "type": "integer",
                        "example": "1626818340"
                    },
                    "activeTo": {
                        "description": "In Unix timestamp",
                        "type": "integer",
                        "example": "1626818340"
                    },
                    "offerFrom": {
                        "description": "In Unix timestamp",
                        "type": "integer",
                        "example": "1626818340"
                    },
                    "offerTo": {
                        "description": "In Unix timestamp",
                        "type": "integer",
                        "example": "1626818340"
                    },
                    "image": {
                        "description": "Front page",
                        "type": "string",
                        "example": "https://via.placeholder.com/1200x2050"
                    },
                    "pages": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "https://via.placeholder.com/1200x2050"
                        }
                    }
                },
                "type": "object"
            },
            "NotificationResource": {
                "title": "Notification",
                "description": "",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "body": {
                        "nullable": true,
                        "type": "string",
                        "example": "This is the body of a notification"
                    },
                    "title": {
                        "nullable": true,
                        "type": "string",
                        "example": "Notification received"
                    },
                    "created_at": {
                        "type": "string",
                        "example": "2018-04-12 06:31:41"
                    },
                    "planned_at": {
                        "type": "string",
                        "example": "2018-04-12 06:31:41"
                    },
                    "valid_to": {
                        "nullable": true,
                        "type": "string",
                        "example": "2018-04-12 06:31:41"
                    },
                    "sent_at": {
                        "type": "string",
                        "example": "2018-04-12 06:31:41"
                    },
                    "media": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "https://"
                        }
                    },
                    "type": {
                        "type": "string",
                        "example": "push"
                    },
                    "target": {
                        "type": "string",
                        "example": "clubcard://website"
                    },
                    "target_website": {
                        "nullable": true,
                        "type": "string",
                        "example": "https://"
                    },
                    "style": {
                        "nullable": true,
                        "type": "object",
                        "example": []
                    },
                    "read_at": {
                        "nullable": true,
                        "type": "string",
                        "example": "2018-04-12 06:31:41"
                    }
                },
                "type": "object"
            },
            "CampaignResource": {
                "title": "Promo Campaign",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 10
                    },
                    "type": {
                        "type": "enum",
                        "enum": [
                            "estamp",
                            "calendar",
                            "qr",
                            "info",
                            "competition"
                        ],
                        "example": "estamp"
                    },
                    "title": {
                        "type": "string",
                        "example": "CZ campaign"
                    },
                    "description": {
                        "nullable": true,
                        "type": "string",
                        "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam luctus ligula eget varius."
                    },
                    "message_box": {
                        "nullable": true,
                        "type": "string",
                        "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam luctus ligula eget varius."
                    },
                    "how_it_works_key": {
                        "nullable": true,
                        "description": "Reference to text content file",
                        "type": "string",
                        "example": "minions_how_it_works"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "type": {
                                    "type": "enum",
                                    "enum": [
                                        "base",
                                        "base_inactive",
                                        "modal",
                                        "competition_in",
                                        "competition_out"
                                    ],
                                    "example": "base"
                                },
                                "uri": {
                                    "type": "string",
                                    "example": "https://via.placeholder.com/1200x1200"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "terms_and_conditions": {
                        "type": "string",
                        "example": "https://example.com/storage/tnc.pdf"
                    },
                    "competition_tac": {
                        "type": "string",
                        "example": "https://example.com/storage/competition.pdf"
                    },
                    "visual": {
                        "$ref": "#/components/schemas/VisualSchemaResource"
                    },
                    "state": {
                        "description": "",
                        "type": "enum",
                        "enum": [
                            "scheduled",
                            "pre",
                            "running",
                            "running_but_collection",
                            "post",
                            "ended",
                            "unknown"
                        ],
                        "example": "pre"
                    },
                    "is_published": {
                        "description": "If false, the campaign should not be displayed to users who are not developers",
                        "type": "boolean",
                        "example": true
                    },
                    "pre_valid_from": {
                        "nullable": true,
                        "description": "in ISO 8601 Zulu format; nullable",
                        "type": "string",
                        "example": "2020-07-24T00:00:00Z"
                    },
                    "valid_from": {
                        "description": "in ISO 8601 Zulu format",
                        "type": "string",
                        "example": "2020-08-24T00:00:00Z"
                    },
                    "collectable_to": {
                        "nullable": true,
                        "description": "in ISO 8601 Zulu format; nullable",
                        "type": "string",
                        "example": "2020-09-24T00:00:00Z"
                    },
                    "valid_to": {
                        "description": "in ISO 8601 Zulu format",
                        "type": "string",
                        "example": "2020-10-24T00:00:00Z"
                    },
                    "post_valid_to": {
                        "nullable": true,
                        "description": "in ISO 8601 Zulu format; nullable",
                        "type": "string",
                        "example": "2020-11-24T00:00:00Z"
                    },
                    "coupons_total": {
                        "description": "All available coupons",
                        "type": "integer",
                        "example": 5
                    },
                    "coupons_redeemed": {
                        "description": "Count of redeemed coupons",
                        "type": "integer",
                        "example": 2
                    },
                    "clubcard": {
                        "properties": {
                            "can_claim": {
                                "description": "The user can claim a new coupon in this campaign",
                                "type": "boolean",
                                "example": true
                            },
                            "can_redeem": {
                                "description": "The user has a claimed coupon that can be redeemed in this campaing",
                                "type": "boolean",
                                "example": true
                            }
                        },
                        "type": "object"
                    },
                    "details": {
                        "description": "Contents of the object are variable, each field description shows where you can expect it",
                        "properties": {
                            "conditions_driver": {
                                "description": "[competition] Conditions driver",
                                "type": "enum",
                                "enum": [
                                    "plain",
                                    "digital_contact_preferences"
                                ],
                                "example": "plain"
                            },
                            "title_key": {
                                "description": "[competition] Reference to text content file",
                                "type": "string",
                                "example": "competition_campaignA_title"
                            },
                            "description_key": {
                                "description": "[competition] Reference to text content file",
                                "type": "string",
                                "example": "competition_campaignA_description"
                            },
                            "external_link": {
                                "nullable": true,
                                "description": "[info, competition] External link",
                                "type": "string",
                                "example": "https://example.com/campaign"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CompetitionCampaignResource": {
                "title": "Competition Campaign",
                "properties": {
                    "title_key": {
                        "description": "Reference to text content file",
                        "type": "string",
                        "example": "competition_p8_title"
                    },
                    "description_key": {
                        "description": "Reference to text content file",
                        "type": "string",
                        "example": "competition_p8_description"
                    },
                    "terms_and_conditions": {
                        "type": "string",
                        "example": "http://www.tac.loc"
                    },
                    "external_link": {
                        "nullable": true,
                        "type": "string",
                        "example": "https://www.site.loc"
                    },
                    "visual": {
                        "$ref": "#/components/schemas/VisualSchemaResource"
                    },
                    "conditions_driver": {
                        "type": "enum",
                        "enum": [
                            "plain",
                            "digital_contact_preferences"
                        ],
                        "example": "plain"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "type": {
                                    "type": "enum",
                                    "enum": [
                                        "base"
                                    ],
                                    "example": "base"
                                },
                                "uri": {
                                    "type": "string",
                                    "example": "https://via.placeholder.com/1200x1200"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "is_published": {
                        "type": "boolean",
                        "example": "true"
                    },
                    "valid_from": {
                        "type": "string",
                        "example": "2021-08-03T00:00:00Z"
                    },
                    "valid_to": {
                        "type": "string",
                        "example": "2021-08-04T00:00:00Z"
                    },
                    "state": {
                        "type": "enum",
                        "enum": [
                            "scheduled",
                            "running",
                            "ended",
                            "unknown"
                        ],
                        "example": "running"
                    },
                    "rewards": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CompetitionRewardResource"
                        }
                    }
                },
                "type": "object"
            },
            "CompetitionRewardResource": {
                "title": "Competition Reward",
                "properties": {
                    "position": {
                        "type": "integer",
                        "example": 1
                    },
                    "description_key": {
                        "description": "Reference to text content file",
                        "type": "string",
                        "example": "competition_p8_productA"
                    },
                    "image_uri": {
                        "type": "string",
                        "example": "https://via.placeholder.com/1200x1200"
                    }
                },
                "type": "object"
            },
            "VisualSchemaResource": {
                "title": "Visual Schema",
                "description": "",
                "properties": {
                    "primary_color": {
                        "description": "[all]",
                        "type": "string",
                        "example": "#000000"
                    },
                    "color_on_primary": {
                        "description": "[all]",
                        "type": "string",
                        "example": "#ffffff"
                    },
                    "badge_background_color": {
                        "description": "[estamp]",
                        "type": "string",
                        "example": "#000000"
                    },
                    "badge_text_color": {
                        "description": "[estamp]",
                        "type": "string",
                        "example": "#000000"
                    },
                    "badge_border_color": {
                        "description": "[estamp]",
                        "type": "string",
                        "example": "#000000"
                    },
                    "stamp_icon_url": {
                        "description": "[estamp]",
                        "type": "string",
                        "example": "https://via.placeholder.com/32x32"
                    }
                },
                "type": "object"
            },
            "QrBarcodeResource": {
                "title": "QR Barcode",
                "description": "",
                "properties": {
                    "smart_barcode": {
                        "type": "string",
                        "example": "9940908541506467603179"
                    },
                    "ean": {
                        "type": "string",
                        "example": "9940908541506"
                    },
                    "status": {
                        "type": "enum",
                        "enum": [
                            "available",
                            "claimed",
                            "redeemed",
                            "expired"
                        ],
                        "example": "redeemed"
                    },
                    "claimed_at": {
                        "nullable": true,
                        "type": "string",
                        "example": "2020-06-30T14:55:04+00:00"
                    },
                    "redeemed_at": {
                        "nullable": true,
                        "type": "string",
                        "example": "2020-06-30T14:55:04+00:00"
                    },
                    "valid_from": {
                        "nullable": true,
                        "type": "string",
                        "example": "2020-06-30T14:55:04+00:00"
                    },
                    "expire_at": {
                        "nullable": true,
                        "type": "string",
                        "example": "2020-06-30T14:55:04+00:00"
                    },
                    "reward": {
                        "$ref": "#/components/schemas/QrRewardResource"
                    }
                },
                "type": "object"
            },
            "QrCampaignResource": {
                "title": "QR Campaign",
                "description": "",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Title"
                    },
                    "description": {
                        "nullable": true,
                        "type": "string",
                        "example": "Description"
                    },
                    "terms_and_conditions": {
                        "type": "string",
                        "example": "http://www.tac.loc"
                    },
                    "state": {
                        "type": "enum",
                        "enum": [
                            "scheduled",
                            "pre",
                            "running",
                            "running_but_collection",
                            "post",
                            "ended",
                            "unknown"
                        ],
                        "example": "running"
                    },
                    "pre_valid_from": {
                        "nullable": true,
                        "type": "string",
                        "example": "31.12.2020"
                    },
                    "valid_from": {
                        "type": "string",
                        "example": "31.12.2020"
                    },
                    "collectable_to": {
                        "nullable": true,
                        "type": "string",
                        "example": "31.12.2020"
                    },
                    "valid_to": {
                        "type": "string",
                        "example": "31.12.2020"
                    },
                    "post_valid_to": {
                        "nullable": true,
                        "type": "string",
                        "example": "31.12.2020"
                    }
                },
                "type": "object"
            },
            "QrRewardResource": {
                "title": "QR Reward",
                "description": "",
                "properties": {
                    "description": {
                        "type": "string",
                        "example": "DK1_1108"
                    },
                    "image_uri": {
                        "type": "string",
                        "example": "https://s3.eu-central-1.amazonaws.com/path/image.png"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "core",
            "description": "Core functionality"
        },
        {
            "name": "Bonus customer mailing"
        },
        {
            "name": "Content management / Banners"
        },
        {
            "name": "Content management / Leaflets"
        },
        {
            "name": "Customers / Account / Estatement"
        },
        {
            "name": "Customers / Account / Loyalty program"
        },
        {
            "name": "Customers / Account / Profile"
        },
        {
            "name": "Promo events"
        }
    ]
}
